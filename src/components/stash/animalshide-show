import React from 'react';
import './Animal.css';

let questions = {
	alive: 'Is it alive?',
	extinct: 'Is is extinct?',
	mammal: 'Is it a mammal?',
	amphibian: 'Is it an amphibian?',
	arms: 'Does it have arms?',
	legs: 'Does it have legs?',
	fly: 'Does it fly?',
	livesInWater: 'Does it live in water?',
	fur: 'Does it have fur?',
	famous: 'Is it famous?',
	male: 'Is it male?',
	female: 'Is it female?',
	actor: 'Is it an actor?',
	athelete: 'Is it an athelete?',
	musician: 'Is it a musician?',
	politician: 'Is it a politician?',
	singer: 'Is it a singer?',
	awardWinner: 'Is it an award winner?',
	ageAbove40: 'Is it more than 40 years old?'
};

class Animals extends React.Component {
	constructor(props) {
		super(props);
		this.state = {
			yes: [],
			no: []
		};
		// This binding is necessary to make `this` work in the callback
		this.handleClick = this.handleClick.bind(this);
	}

	// addList() {
	// 	document.getElementsByTagName('li').classList.add('hide');
	// 	// document.querySelector('.question').classList.add('hide');
	// 	console.log('hi');
	// }

	handleClick(animal, key, question) {
		if (animal[key]) {
			this.setState((state) => {
				return { yes: [ ...state.yes, question ] };
			});
		} else {
			this.setState((state) => {
				return { no: [ ...state.no, question ] };
			});
		}
	}

	generateQuestions = (animal) => {
		console.log(questions);
		return Object.keys(animal).map((key) => {
			return (
				<li className={key} onClick={() => this.handleClick(animal, key, questions[key])}>
					{questions[key]}
				</li>
			);
		});
	};

	generateQuestionsYes = () => {
		return this.state.yes.map((question) => {
			return <li>{question}</li>;
		});
	};

	generateQuestionsNo = () => {
		return this.state.no.map((question) => {
			return <li>{question}</li>;
		});
	};

	getClassNames(wow) {
		var keys = Object.keys(questions);
		for (var j = 0; j < keys.length; j++) {
			var key = keys[j];
			for (let i = 0; i < wow.length; i++) {
				console.log(wow[i].innerHTML, questions[key]);

				if (wow[i].innerHTML === questions[key]) {
					var answer = wow[i];
					// 				// console.log(typeof wow[i].innerHTML, typeof questions[key]);

					// {
					// 	{
					answer.style.color = 'red';
					// 	}
					// }
				}
			}
		}
	}
	// }
	// getClassNames() {
	// 	var keys = Object.keys(questions);
	// 	for (var j = 0; j < keys.length; j++) {
	// 		var key = keys[j];
	// 		console.log(questions[key]);
	// 		const answer = questions[key];
	// {
	// 	{
	// 		answer.style.color = 'red';
	// 	}
	// }
	// console.log(typeof wow[i].innerHTML, typeof questions[key]);
	// return <li onClick={wow[i].classList.add('hide')} />;
	//
	// 	}
	// }

	render() {
		let animal = this.props.animal;
		console.log('random animal', this.props.animal);
		// const container = document.querySelector('.flex-animal.question');
		// let wow = container.getElementsByTagName('li');
		const wow = document.querySelectorAll('li');
		console.log(wow);

		return (
			<div>
				<div className="flex-instructions animal-hed">
					<p>
						<span>Animal</span>
						<br />
						Is it bigger than a breadbox?{' '}
					</p>
					{/* <strong>{String(randomAnimal.breadbox)}</strong> */}
				</div>

				<div className="animal-container">
					<div className="flex-animal yes">
						<h1>
							<ul>
								<span>yes</span>
								{this.generateQuestionsYes()}
							</ul>
						</h1>
					</div>

					<div className="flex-animal question">
						<h1>
							<ul>
								{/* <h3>{String(randomAnimal.breadbox)}</h3> */}
								{this.generateQuestions(animal)}
								{this.getClassNames(wow)}
							</ul>
						</h1>
					</div>

					<div className="flex-animal no">
						<h1>
							<ul>
								<span>no</span>
								{this.generateQuestionsNo()}
							</ul>
						</h1>
					</div>
				</div>
			</div>
		);
	}
}
export default Animals;
